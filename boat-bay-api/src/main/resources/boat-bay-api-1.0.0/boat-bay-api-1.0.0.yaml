openapi: 3.0.0
info:
    version: 1.0.0
    title: Boat Bay Client
    description: Endpoints for the boat bay operations
    license:
        name: Backbase
servers:
    - url: http://boat-bay-server.proto.backbasecloud.com/
tags:
  - name: dashboard
  - name: upload-plugin
paths:
    /api/boat/portals:
        get:
            summary: get list of portals
            operationId: getPortals
            tags:
              - dashboard
            responses:
                '200':
                    description: boat legacy portal
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-portal.yaml#/BoatPortal"
    /api/boat/portals/{portalKey}/products:
            get:
                summary: get products for identified portal
                operationId: getPortalProducts
                tags:
                  - dashboard
                responses:
                    '200':
                        description: list of protals products
                        content:
                            application/json:
                                schema:
                                    type: array
                                    items:
                                        $ref: "schemas/boat-product.yaml#/BoatProduct"
            parameters:
                - name: portalKey
                  in: path
                  description: portal idenifier
                  required: true
                  schema:
                      type: string
    /api/boat/portals/{portalKey}/products/{productKey}/capabilities:
        get:
            summary: get Portal Products Capabalities
            operationId: getPortalCapabilities
            tags:
              - dashboard
            responses:
                '200':
                    description: list of capabilities for product
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-capability.yaml#/BoatCapability"
        parameters:
            - name: pageable
              in: query
              required: false
              schema:
                $ref: 'other-schemas/pageable.yaml#/Pageable'
            - name: productKey
              in: path
              description: product idenifier
              required: true
              schema:
                  type: string
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                  type: string
    /api/boat/portals/{portalKey}/products/{productKey}/services:
        get:
            summary: get Portal services for a given product
            operationId: getPortalServices
            tags:
              - dashboard
            responses:
                '200':
                    description: list of services for product
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-service.yaml#/BoatService"
        parameters:
            - name: pageable
              in: query
              required: false
              schema:
                $ref: 'other-schemas/pageable.yaml#/Pageable'
            - name: productKey
              in: path
              description: product idenifier
              required: true
              schema:
                  type: string
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                  type: string
    /api/boat/portals/{portalKey}/products/{productKey}/specs:
        get:
            summary: get Portal Specs for given product
            operationId: getPortalSpecs
            tags:
              - dashboard
            responses:
                '200':
                    description: list of specs for product
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-spec.yaml#/BoatSpec"
        parameters:
            - name: pageable
              in: query
              required: false
              schema:
                $ref: 'other-schemas/pageable.yaml#/Pageable'
            - name: productKey
              in: path
              description: product idenifier
              required: true
              schema:
                  type: string
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                  type: string
            - name: capabilityId
              in: query
              description: capablility idenifier
              required: false
              schema:
                  type: string
            - name: productReleaseId
              in: query
              description: product release idenifier
              required: false
              schema:
                  type: string
            - name: serviceId
              in: query
              description: service idenifier
              required: false
              schema:
                  type: string
            - name: grade
              in: query
              description: grade of spec
              required: false
              schema:
                  type: string
            - name: backwardsCompatible
              in: query
              description: backwards compatible indicator
              required: false
              schema:
                  type: boolean
            - name: changed
              in: query
              description: changed indicator
              required: false
              schema:
                  type: boolean
    /api/boat/portals/{portalKey}/products/{productKey}/specs/{specId}/lint-report:
        get:
            summary: get Lint Report for spec
            operationId: getLintReportForSpec
            tags:
              - dashboard
            responses:
                '200':
                    description: lint report for spec
                    content:
                        application/json:
                            schema:
                                $ref: "schemas/boat-lint-report.yaml#/BoatLintReport"
        parameters:
            - name: specId
              in: path
              description: spec idenifier
              required: true
              schema:
                type: string

            - name: productKey
              in: path
              description: product idenifier
              required: true
              schema:
                type: string
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                type: string
            - name: refresh
              in: query
              description: refresh idicator
              required: false
              schema:
                  type: boolean
    /api/boat/portals/{portalKey}/lint-rules:
        get:
            summary: get list of lint rules
            operationId: getPortalLintRules
            tags:
              - dashboard
            responses:
                '200':
                    description: list of lint rules for portal
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-lint-rule.yaml#/BoatLintRule"
        parameters:
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                  type: string
    /api/boat/portals/{portalKey}/products/{productKey}/releases:
        get:
            summary: get product releases
            operationId: getProductReleases
            tags:
              - dashboard
            responses:
                '200':
                    description: list of product releases for product
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-product-release.yaml#/BoatProductRelease"
        parameters:
            - name: productKey
              in: path
              description: id of product
              required: true
              schema:
                  type: string
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                  type: string
    /api/boat/portals/{portalKey}/products/{productKey}/releases/{releaseKey}/specs:
        get:
            summary: get specs for product release
            operationId: getProductReleaseSpecs
            tags:
              - dashboard
            responses:
                '200':
                    description: list of specs for product release
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-spec.yaml#/BoatSpec"
        parameters:
            - name: releaseKey
              in: path
              description: key for product release
              required: true
              schema:
                  type: string
            - name: productKey
              in: path
              description: id of product
              required: true
              schema:
                  type: string
            - name: portalKey
              in: path
              description: portal idenifier
              required: true
              schema:
                  type: string
    /api/boat/portals/{portalKey}/lint-rules/{lintRuleId}:
        post:
            summary: update lint rule for portal
            operationId: updatePortalLintRule
            tags:
              - dashboard
            requestBody:
                content:
                    application/json:
                        schema:
                            $ref: 'schemas/boat-lint-rule.yaml#/BoatLintRule'
            responses:
                '200':
                    description: updated successfuly
                    content: {}
        parameters:
            -   name: lintRuleId
                in: path
                description: id of portals lint rule
                required: true
                schema:
                    type: string

            -   name: portalKey
                in: path
                description: portal idenifier
                required: true
                schema:
                    type: string
    /api/boat/dashboard:
        get:
            summary: get list of boat portal dashboards
            operationId: getDashboard
            tags:
              - dashboard
            responses:
                '200':
                    description: list of boat portal dashboards
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-portal-dashboard.yaml#/BoatPortalDashboard"
    /api/boat/dashboard/{projectKey}/{productKey}:
        get:
            summary: get product for dashboard project
            operationId: getProductDashboard
            tags:
              - dashboard
            responses:
                '200':
                    description: product for dashboard
                    content:
                        application/json:
                            schema:
                                $ref: "schemas/boat-product.yaml#/BoatProduct"
        parameters:
            -   name: projectKey
                in: path
                description: project idenifier
                required: true
                schema:
                    type: string
            -   name: productKey
                in: path
                description: product idenifier
                required: true
                schema:
                    type: string
    /api/boat/portals/{portalKey}/products/{productKey}/tags:
      get:
        summary: get tags for product
        operationId: getProductTags
        tags:
          - dashboard
        responses:
          '200':
            description: list of product tags
            content:
              application/json:
                schema:
                  type: array
                  items:
                    $ref: "schemas/boat-tag.yaml#/BoatTag"
      parameters:
        - name: portalKey
          in: path
          description: portal idenifier
          required: true
          schema:
            type: string
        - name: productKey
          in: path
          description: product idenifier
          required: true
          schema:
            type: string
    /api/boat-maven-plugin/{sourceId}/upload:
        put:
            summary: upload and lint specs
            operationId: uploadSpec
            tags:
              - upload-plugin
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            $ref: "schemas/upload-request-body.yaml"
            responses:
                '200':
                    description: list of lint reports for specs
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: "schemas/boat-lint-report.yaml#/BoatLintReport"
        parameters:
            - name: sourceId
              in: path
              description: source idenifier
              required: true
              schema:
                  type: string










