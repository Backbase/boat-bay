entity Dashboard {
    name String required
    title String
    subTitle String
    navTitle String
    content TextBlob
}

entity Portal {
	key String required unique
	name String required
	version String required
    title String
    subTitle String
    navTitle String
    logoUrl String
    logoLink String
    content TextBlob
    createdOn Instant
    createdBy String
    hide Boolean
}

entity ProductRelease {
    key String required
    name String required
}

entity Product {
    key String required
	name String required
	order Integer
    title String
    content TextBlob
    createdOn Instant
    createdBy String
    hide Boolean
}

entity Capability {
	key String required
    name String required
    order Integer
    title String
    subTitle String
    navTitle String
    content TextBlob
    createdOn Instant
    createdBy String
    hide Boolean
}

entity ServiceDefinition {
	key String required
	name String required
	order Integer
    title String
    subTitle String
    navTitle String
    content TextBlob
    order Integer
    createdOn Instant
    createdBy String
    hide Boolean
}

entity Spec {
	key String required
	name String required
	version String required
    title String
    openApi TextBlob required
    tagsCsv String
    description TextBlob
    createdOn Instant required
    createdBy String required
    checksum String required
    filename String required
    valid Boolean required
    order Integer
    parseError TextBlob
    externalDocs String
    hide Boolean

    sourcePath String
    sourceName String
    sourceUrl String
    sourceCreatedBy String
    sourceCreatedOn Instant
    sourceLastModifiedOn Instant
    sourceLastModifiedBy String

}

entity SpecType {
    name String required
    description String
    matchSpEL String
    icon String required
}

entity Source {
    name String required
    type SourceType required
    baseUrl String required
    active Boolean
    path String
    filter String
    username String
    password String
    cronExpression String
    specFilterSpEL String
    productKeySpEL String
    productNameSpEL String
    capabilityKeySpEL String
    capabilityNameSpEL String
    serviceKeySpEL String
    serviceNameSpEL String

    versionSpEL String
    overwriteChanges Boolean
}

@readOnly(true)
entity LintRule {
    ruleId String required unique
    title String required
    summary String
    severity Severity required
    description String
    externalUrl String
    enabled Boolean required
}

@readOnly(true)
entity LintRuleSet {
    ruleSetId String required unique
    name String required
    description String
    externalUrl String
}


entity PortalLintRuleSet {
    name String required
}

entity PortalLintRule {
    name String required
}

entity PortalLintRuleConfig {
    path String required
    type String required
    value TextBlob required
}

entity LintReport {
    name String
    grade String
    passed Boolean
    lintedOn Instant
}

entity LintRuleViolation {
    name String required
	description String required
	url String
	severity Severity
    lineStart Integer
    lineEnd Integer
    jsonPointer String
}

enum Severity {
	MUST SHOULD MAY HINT
}

enum TypeSeverity {
	BUG CODE_SMELL VULNERABILITY SECURITY_HOTSPOT
}

enum SourceType {
    GIT JFROG HTTP FILE_SYSTEM BOAT_MAVEN_PLUGIN
}

relationship ManyToMany {
    ProductRelease to Spec
}

relationship OneToMany {
    Portal to ProductRelease{portal(name) required}
	Portal to Product{portal(name) required}
	Product to Capability{product(name) required}
	Capability to ServiceDefinition{capability(name) required}
	ServiceDefinition to Spec{serviceDefinition(name) required}
	LintReport to LintRuleViolation{lintReport(name) required}
	LintRuleSet to LintRule{ruleSet(name) required}
	PortalLintRuleSet to PortalLintRule{portalRuleSet(name) required}
}

relationship ManyToOne {
    Spec{portal(name) required} to Portal
    Spec{capability(name) required} to Capability
    Spec{product(name) required} to Product
    Spec{source(name)} to Source
    Spec{specType(name) required} to SpecType

}

relationship OneToOne {
    Dashboard{defaultPortal(name) required} to Portal
	LintReport to Spec
	LintRuleViolation to LintRule
	Source{portal(name) required} to Portal
	Source{capability(name)} to Capability
	Source{serviceDefinition(name)} to ServiceDefinition

    PortalLintRuleSet{portal(name) required} to Portal{portalRuleSet(name)}
    PortalLintRuleConfig to PortalLintRule

}






