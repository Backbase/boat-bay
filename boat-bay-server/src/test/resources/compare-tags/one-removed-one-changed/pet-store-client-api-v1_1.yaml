openapi: "3.0.3"
info:
  title: Swagger Petstore
  description: Petstore
  version: 1.1.0
  x-icon: petstore
servers:
  - description: Prism mock server
    url: http://localhost:4010
tags:
  - name: tag-one
    description: Everything about your tag-one
  - name: tag-two
    description: Everything about your tag-one
  - name: tag-three
    description: Everything about your tag-one
    externalDocs:
      description: Find out more about our store
      url: 'http://swagger.io'
paths:
  /pet:
    post:
      summary: Create a pet
      operationId: createPet
      tags:
        - tag-one
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Pet'
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /pet/{petId}:
    get:
      summary: Info for a specific pet
      operationId: showPetById
      tags:
        - tag-one
        - tag-two
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Pet"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      tags:
        - pet
      summary: Deletes a pet
      description: 'Delete pet by id'
      operationId: deletePet
      parameters:
        - name: petId
          in: path
          required: true
          description: The id of the pet to retrieve
          schema:
            type: string
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
  /pets:
    get:
      summary: List all pets
      operationId: listPets
      tags:
        - tag-one
        - tag-three
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of pets
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pet'
components:
  schemas:
    Pet:
      type: object
      required:
        - id
        - name
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        type:
          type: string
          description: type of pet
          enum:
            - Dog
            - Cat
        status:
          type: string
          description: pet status in the store
          enum:
            - available
            - pending
            - sold
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
