entity Dashboard {
    name String required
    title String
    subTitle String
    navTitle String
    content TextBlob
}

entity Portal {
	key String required unique
	name String required
    subTitle String
    logoUrl String
    logoLink String
    content TextBlob
    createdOn ZonedDateTime
    createdBy String
    hide Boolean
    linted Boolean

}

entity ProductRelease {
    key String required
    name String required
    version String required
    releaseDate ZonedDateTime
    hide Boolean
}

entity Product {
    key String required
	name String required
	order Integer
    content TextBlob
    createdOn ZonedDateTime
    createdBy String
    hide Boolean
    jiraProjectId String
}

entity Capability {
	key String required
    name String required
    order Integer
    subTitle String
    content TextBlob
    createdOn ZonedDateTime
    createdBy String
    hide Boolean
}

entity ServiceDefinition {
	key String required
	name String required
	order Integer
    subTitle String
    description TextBlob
    icon String
    color String
    order Integer
    createdOn ZonedDateTime
    createdBy String
    hide Boolean
}

entity Spec {
	key String required
	name String required
	version String required
    title String
    icon String
    openApi TextBlob required
    description TextBlob
    createdOn ZonedDateTime required
    createdBy String required
    checksum String required
    filename String required
    valid Boolean required
    order Integer
    parseError TextBlob
    externalDocs String
    hide Boolean
    grade String
    changes Changes
    sourcePath String
    sourceName String
    sourceUrl String
    sourceCreatedBy String
    sourceCreatedOn ZonedDateTime
    sourceLastModifiedOn ZonedDateTime
    sourceLastModifiedBy String

}

entity Tag {
    name String required unique
    description TextBlob
    hide Boolean
    color String
}

entity SpecType {
    name String required
    description String
    matchSpEL String
    icon String required
}

entity Source {
    name String required
    key String required
    type SourceType required
    baseUrl String required
    active Boolean
    filterArtifactsName String
    filterArtifactsCreatedSince LocalDate
    username String
    password String
    cronExpression String
    runOnStartup Boolean
    specFilterSpEL String
    capabilityKeySpEL String
    capabilityNameSpEL String
    serviceKeySpEL String
    serviceNameSpEL String
    specKeySpEL String
    versionSpEL String
    productReleaseNameSpEL String
    productReleaseVersionSpEL String
    productReleaseKeySpEL String
    itemLimit Integer
    overwriteChanges Boolean
    options TextBlob
}

entity SourcePath {
    name String
}

entity LintRule {
    ruleId String required
    title String required
    ruleSet String
    summary String
    severity Severity required
    description String
    externalUrl String
    enabled Boolean required
}

entity LintReport {
    name String
    grade String
    passed Boolean
    lintedOn ZonedDateTime
}

entity LintRuleViolation {
    name String required
	description TextBlob required
	url String
	severity Severity
    lineStart Integer
    lineEnd Integer
    jsonPointer String
}

enum Severity {
	MUST SHOULD MAY HINT
}

enum Changes {
    INVALID_VERSION NOT_APPLICABLE ERROR_COMPARING UNCHANGED COMPATIBLE BREAKING
}

enum TypeSeverity {
	BUG CODE_SMELL VULNERABILITY SECURITY_HOTSPOT
}

enum SourceType {
    GIT JFROG HTTP FILE_SYSTEM BOAT_MAVEN_PLUGIN
}

enum DescriptionResolveStrategy {
    MANUAL FROM_SPEC
}

relationship ManyToMany {
    ProductRelease to Spec
    Spec to Tag

}

relationship OneToMany {
    Product to ProductRelease{product(name) required}
	Portal to Product{portal(name) required}
	Product to Capability{product(name) required}
	Capability to ServiceDefinition{capability(name) required}
	ServiceDefinition to Spec{serviceDefinition(name) required}
	LintReport{violations} to LintRuleViolation{lintReport(name)}
	Portal to LintRule{portal(name) required}
	Source to SourcePath{source(name)}
}

relationship ManyToOne {
    Spec{portal(name) required} to Portal
    Spec{capability(name) required} to Capability
    Spec{product(name) required} to Product
    Spec{source(name)} to Source
    Spec{specType(name) required} to SpecType

    Source{portal(name) required} to Portal
    Source{product(name) required} to Product
    Source{capability(name)} to Capability
    Source{serviceDefinition(name)} to ServiceDefinition

    LintRuleViolation{lintRule(title) required} to LintRule

}

relationship OneToOne {
    Dashboard{defaultPortal(name) required} to Portal
	LintReport to Spec
}


paginate Capability with pagination
paginate Spec with pagination
paginate LintRuleViolation with pagination

